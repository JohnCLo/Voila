{
  "name": "quandl",
  "version": "0.0.3",
  "description": "A nodejs module for interacting with the Quandl API.",
  "main": "main.js",
  "dependencies": {
    "assert": "^1.1.1",
    "async": "^0.6.2",
    "lodash": "^2.4.1",
    "request": "https://registry.npmjs.org/request/-/request-2.34.0.tgz"
  },
  "devDependencies": {},
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/normanjoyner/node-quandl.git"
  },
  "keywords": [
    "quandl",
    "api",
    "finance",
    "numerical",
    "data",
    "economic",
    "social",
    "datasets"
  ],
  "author": {
    "name": "Norman Joyner",
    "email": "norman.joyner@gmail.com"
  },
  "license": "GPLv2",
  "bugs": {
    "url": "https://github.com/normanjoyner/node-quandl/issues"
  },
  "homepage": "https://github.com/normanjoyner/node-quandl",
  "readme": "node-quandl\n====================\n\n##About\n\n###Description\nA nodejs module for interacting with the Quandl API.\n\n###Author\nNorman Joyner - norman.joyner@gmail.com\n\n##Getting Started\n\n###Installation\n```npm install quandl```\n\n###Configuration\nSimply require the quandl module, instantiate a new Quandl object, configure it if necessary, and start making calls. The auth token and api version are configurable.\n\nNew Quandl objects can be instantiated with configuration parameters. Here is an example:\n```javascript\nvar Quandl = require(\"quandl\");\nvar quandl = new Quandl({\n    auth_token: \"dsahFHUiewjjd\",\n    api_version: 1,\n    proxy: \"http://myproxy:3128\"\n});\n```\n\nQuandl objects can also be configured via the ```.configure(options)``` method. Here is an exmaple:\n```javascript\nvar Quandl = require(\"quandl\");\nvar quandl = new Quandl();\n\nvar options = {\n    auth_token: \"dsahFHUiewjjd\"\n}\n\nquandl.configure(options);\n```\n\nThe auth_token parameter defaults to undefined (anonymous access). Be aware of the [Quandl Usage Rules](http://www.quandl.com/help/api#Usage-Rules).\nThe api_version parameter defaults to 1, for v1 api access.\nThe proxy parameter routes all requests through the specfied proxy.\n\n###Supported API versions\n* v1\n\n###Supported API Methods\n* [Getting a Dataset](http://www.quandl.com/help/api#A-Simple-Example)\n* [Getting Metadata](http://www.quandl.com/help/api#Getting-Metadata)\n* [Getting Multiple Datasets](http://www.quandl.com/help/api#Multiple-Datasets)\n* [Performing a Search](http://www.quandl.com/help/api#Doing-a-Search)\n* [Getting Favorites](http://www.quandl.com/help/api#Getting-Favourites)\n\n###Examples\nFetch Mt. Gox Bitcoin dataset, and print response:\n```javascript\nquandl.dataset({ source: \"BITCOIN\", table: \"MTGOXUSD\" }, function(err, response){\n    if(err)\n        throw err;\n\n    console.log(response);\n});\n```\nFetch dataset metadata, and print response:\n```javascript\nquandl.metadata(\"ZILLOW\", \"ZIP_ALLHOMES_15235\", function(err, response){\n    if(err)\n        throw err;\n\n    console.log(response);\n});\n```\n\nSearch for datasets pertaining to \"crude oil\", and print xml response:\n```javascript\nquandl.search(\"crude oil\", { format: \"xml\" }, function(err, response){\n    console.log(err);\n    console.log(response);\n});\n```\n\n###Running Tests\nInstall the mocha module:\n\n```npm install mocha -g```\n\nFrom root project directory, run mocha:\n\n```mocha ```\n",
  "readmeFilename": "README.md",
  "_id": "quandl@0.0.3",
  "dist": {
    "shasum": "a45e152f1d97770e7bbb9f06903e208dc1d10ebc"
  },
  "_from": "quandl@*",
  "_resolved": "https://registry.npmjs.org/quandl/-/quandl-0.0.3.tgz"
}
