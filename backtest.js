var express = require('express');

var app = require('express')()
  , server = require('http').createServer(app)
  , io = require('socket.io').listen(server)
  , request = require('request')
  , ss = require('simple-statistics')
  , moment = require('moment');

var jf = require('jsonfile');

server.listen(5000);

app.use(express.static(__dirname + '/public'));

app.get('/', function (req, res) {
  res.sendfile(__dirname + '/index.html');
});

var Quandl = require("quandl");
var quandl = new Quandl();

var options = {
    auth_token: "GCfKzLJiwuSxucYgqHMq"
}

quandl.configure(options);

var stocks = 
[ 'A',
  'AA',
  'AAL',
  'AAMC',
  'AAN',
  'AAON',
  'AAP',
  'AAPL',
  'AAT',
  'AAWW',
  'ABAX',
  'ABBV',
  'ABC',
  'ABCB',
  'ABCO',
  'ABFS',
  'ABG',
  'ABM',
  'ABMD',
  'ABT',
  'ACAD',
  'ACAS',
  'ACAT',
  'ACC',
  'ACCL',
  'ACCO',
  'ACE',
  'ACET',
  'ACFN',
  'ACGL',
  'ACHC',
  'ACHN',
  'ACI',
  'ACIW',
  'ACLS',
  'ACM',
  'ACN',
  'ACO',
  'ACOR',
  'ACRX',
  'ACT',
  'ACTG',
  'ACW',
  'ACXM',
  'ADBE',
  'ADC',
  'ADES',
  'ADI',
  'ADM',
  'ADNC',
  'ADP',
  'ADS',
  'ADSK',
  'ADT',
  'ADTN',
  'ADUS',
  'ADVS',
  'AE',
  'AEC',
  'AEE',
  'AEGN',
  'AEGR',
  'AEIS',
  'AEL',
  'AEO',
  'AEP',
  'AEPI',
  'AERI',
  'AES',
  'AET',
  'AF',
  'AFAM',
  'AFFX',
  'AFG',
  'AFL',
  'AFOP',
  'AFSI',
  'AGCO',
  'AGEN',
  'AGII',
  'AGIO',
  'AGM',
  'AGN',
  'AGNC',
  'AGO',
  'AGX',
  'AGYS',
  'AHC',
  'AHH',
  'AHL',
  'AHP',
  'AHS',
  'AHT',
  'AI',
  'AIG',
  'AIMC',
  'AIN',
  'AINV',
  'AIQ',
  'AIR',
  'AIRM',
  'AIT',
  'AIV',
  'AIZ',
  'AJG',
  'AKAM',
  'AKR',
  'AKRX',
  'AKS',
  'AL',
  'ALB',
  'ALCO',
  'ALE',
  'ALEX',
  'ALG',
  'ALGN',
  'ALGT',
  'ALIM',
  'ALJ',
  'ALK',
  'ALKS',
  'ALL',
  'ALLE',
  'ALNY',
  'ALOG',
  'ALR',
  'ALSN',
  'ALTR',
  'ALX',
  'ALXN',
  'AMAG',
  'AMAT',
  'AMBA',
  'AMBC',
  'AMCC',
  'AMCX',
  'AMD',
  'AME',
  'AMED',
  'AMG',
  'AMGN',
  'AMKR',
  'AMNB',
  'AMP',
  'AMPE',
  'AMRC',
  'AMRI',
  'AMRS',
  'AMSC',
  'AMSF',
  'AMSG',
  'AMSWA',
  'AMT',
  'AMTD',
  'AMTG',
  'AMWD',
  'AMZN',
  'AN',
  'ANAC',
  'ANAD',
  'ANAT',
  'ANCX',
  'ANDE',
  'ANF',
  'ANGI',
  'ANGO',
  'ANH',
  'ANIK',
  'ANN',
  'ANR',
  'ANSS',
  'ANTM',
  'ANV',
  'AOI',
  'AOL',
  'AON',
  'AOS',
  'AOSL',
  'AP',
  'APA',
  'APAGF',
  'APAM',
  'APC',
  'APD',
  'APEI',
  'APH',
  'APL',
  'APOG',
  'APOL',
  'APP',
  'ARAY',
  'ARC',
  'ARCB',
  'ARCC',
  'ARE',
  'AREX',
  'ARG',
  'ARI',
  'ARIA',
  'ARII',
  'ARNA',
  'ARO',
  'AROW',
  'ARPI',
  'ARQL',
  'ARRS',
  'ARRY',
  'ARSD',
  'ARTC',
  'ARTNA',
  'ARUN',
  'ARW',
  'ARX',
  'ASBC',
  'ASCMA',
  'ASEI',
  'ASGN',
  'ASH',
  'ASNA',
  'ASPS',
  'ASTE',
  'AT',
  'ATEC',
  'ATHN',
  'ATI',
  'ATK',
  'ATLO',
  'ATMI',
  'ATML',
  'ATNI',
  'ATNY',
  'ATO',
  'ATR',
  'ATRC',
  'ATRI',
  'ATRO',
  'ATRS',
  'ATSG',
  'ATU',
  'ATVI',
  'ATW',
  'AUXL',
  'AVA',
  'AVAV',
  'AVB',
  'AVD',
  'AVEO',
  'AVG',
  'AVGO',
  'AVHI',
  'AVID',
  'AVIV',
  'AVNR',
  'AVNW',
  'AVP',
  'AVT',
  'AVX',
  'AVY',
  'AWAY',
  'AWH',
  'AWI',
  'AWK',
  'AWR',
  'AXAS',
  'AXDX',
  'AXE',
  'AXL',
  'AXLL',
  'AXP',
  'AXS',
  'AYI',
  'AYR',
  'AZO',
  'AZPN',
  'AZZ',
  'B',
  'BA',
  'BABY',
  'BAC',
  'BAGL',
  'BAGR',
  'BAH',
  'BALT',
  'BANC',
  'BANF',
  'BANR',
  'BAS',
  'BAX',
  'BBBY',
  'BBCN',
  'BBG',
  'BBGI',
  'BBNK',
  'BBOX',
  'BBRG',
  'BBSI',
  'BBT',
  'BBW',
  'BBX',
  'BBY',
  'BC',
  'BCC',
  'BCEI',
  'BCO',
  'BCOR',
  'BCOV',
  'BCPC',
  'BCR',
  'BCRX',
  'BDBD',
  'BDC',
  'BDE',
  'BDGE',
  'BDN',
  'BDSI',
  'BDX',
  'BEAM',
  'BEAT',
  'BEAV',
  'BEBE',
  'BECN',
  'BEE',
  'BELFB',
  'BEN',
  'BERY',
  'BFAM',
  'BFIN',
  'BFS',
  'BF_B',
  'BG',
  'BGC',
  'BGCP',
  'BGFV',
  'BGG',
  'BGS',
  'BH',
  'BHB',
  'BHE',
  'BHI',
  'BHLB',
  'BID',
  'BIG',
  'BIIB',
  'BIO',
  'BIOL',
  'BIOS',
  'BIRT',
  'BJRI',
  'BK',
  'BKCC',
  'BKD',
  'BKE',
  'BKH',
  'BKMU',
  'BKS',
  'BKU',
  'BKW',
  'BKYF',
  'BLDR',
  'BLK',
  'BLKB',
  'BLL',
  'BLMN',
  'BLOX',
  'BLT',
  'BLUE',
  'BLX',
  'BMI',
  'BMR',
  'BMRC',
  'BMRN',
  'BMS',
  'BMTC',
  'BMY',
  'BNCL',
  'BNCN',
  'BNFT',
  'BNNY',
  'BOBE',
  'BODY',
  'BOFI',
  'BOH',
  'BOKF',
  'BOLT',
  'BONT',
  'BOOM',
  'BPFH',
  'BPI',
  'BPOP',
  'BPTH',
  'BPZ',
  'BR',
  'BRC',
  'BRCD',
  'BRCM',
  'BREW',
  'BRKL',
  'BRKR',
  'BRKS',
  'BRK_B',
  'BRLI',
  'BRO',
  'BRS',
  'BRSS',
  'BRT',
  'BSET',
  'BSFT',
  'BSRR',
  'BSTC',
  'BSX',
  'BTH',
  'BTU',
  'BTX',
  'BURL',
  'BUSE',
  'BV',
  'BWA',
  'BWC',
  'BWINB',
  'BWLD',
  'BWS',
  'BXC',
  'BXP',
  'BXS',
  'BYD',
  'BYI',
  'BZH',
  'C',
  'CA',
  'CAB',
  'CAC',
  'CACB',
  'CACC',
  'CACI',
  'CAG',
  'CAH',
  'CAKE',
  'CALD',
  'CALL',
  'CALM',
  'CALX',
  'CAM',
  'CAMP',
  'CAP',
  'CAR',
  'CARB',
  'CAS',
  'CASH',
  'CASS',
  'CASY',
  'CAT',
  'CATM',
  'CATO',
  'CATY',
  'CAVM',
  'CB',
  'CBB',
  'CBEY',
  'CBF',
  'CBG',
  'CBI',
  'CBK',
  'CBL',
  'CBM',
  'CBOE',
  'CBR',
  'CBRL',
  'CBS',
  'CBSH',
  'CBST',
  'CBT',
  'CBU',
  'CBZ',
  'CCBG',
  'CCC',
  'CCE',
  'CCF',
  'CCG',
  'CCI',
  'CCK',
  'CCL',
  'CCMP',
  'CCNE',
  'CCO',
  'CCOI',
  'CCRN',
  'CCXI',
  'CDE',
  'CDI',
  'CDNS',
  'CDR',
  'CE',
  'CEB',
  'CECE',
  'CECO',
  'CELG',
  'CEMP',
  'CENTA',
  'CENX',
  'CERN',
  'CERS',
  'CETV',
  'CEVA',
  'CF',
  'CFFI',
  'CFFN',
  'CFI',
  'CFN',
  'CFNB',
  'CFNL',
  'CFR',
  'CFX',
  'CGI',
  'CGNX',
  'CHCO',
  'CHD',
  'CHDN',
  'CHDX',
  'CHE',
  'CHEF',
  'CHFC',
  'CHFN',
  'CHH',
  'CHK',
  'CHMG',
  'CHMT',
  'CHRW',
  'CHS',
  'CHSP',
  'CHTP',
  'CHTR',
  'CHUY',
  'CI',
  'CIA',
  'CIDM',
  'CIE',
  'CIEN',
  'CIFC',
  'CINF',
  'CIR',
  'CIT',
  'CIX',
  'CJES',
  'CKEC',
  'CKH',
  'CKP',
  'CL',
  'CLC',
  'CLCT',
  'CLD',
  'CLDT',
  'CLDX',
  'CLF',
  'CLFD',
  'CLGX',
  'CLH',
  'CLI',
  'CLMS',
  'CLNE',
  'CLR',
  'CLUB',
  'CLVS',
  'CLW',
  'CLX',
  'CMA',
  'CMC',
  'CMCO',
  'CMCSA',
  'CME',
  'CMG',
  'CMI',
  'CMLS',
  'CMN',
  'CMO',
  'CMP',
  'CMRX',
  'CMS',
  'CMTL',
  'CNA',
  'CNBC',
  'CNBKA',
  'CNC',
  'CNDO',
  'CNK',
  'CNL',
  'CNMD',
  'CNO',
  'CNOB',
  'CNP',
  'CNQR',
  'CNS',
  'CNSI',
  'CNSL',
  'CNVR',
  'CNW',
  'CNX',
  'COBZ',
  'COCO',
  'CODE',
  'COF',
  'COG',
  'COH',
  'COHR',
  'COHU',
  'COKE',
  'COL',
  'COLB',
  'COLM',
  'CONE',
  'CONN',
  'COO',
  'COP',
  'COR',
  'CORE',
  'CORT',
  'COST',
  'COUP',
  'COV',
  'COVS',
  'COWN',
  'CPA',
  'CPB',
  'CPE',
  'CPF',
  'CPHD',
  'CPK',
  'CPLA',
  'CPN',
  'CPRT',
  'CPSI',
  'CPSS',
  'CPST',
  'CPT',
  'CPWR',
  'CQB',
  'CR',
  'CRAI',
  'CRAY',
  'CREE',
  'CRI',
  'CRIS',
  'CRK',
  'CRL',
  'CRM',
  'CRMT',
  'CROX',
  'CRR',
  'CRRC',
  'CRS',
  'CRUS',
  'CRVL',
  'CRWN',
  'CRY',
  'CRZO',
  'CSBK',
  'CSC',
  'CSCD',
  'CSCO',
  'CSE',
  'CSFL',
  'CSG',
  'CSGP',
  'CSGS',
  'CSH',
  'CSII',
  'CSL',
  'CSOD',
  'CSS',
  'CST',
  'CSU',
  'CSV',
  'CSWC',
  'CSX',
  'CTAS',
  'CTB',
  'CTBI',
  'CTCT',
  'CTG',
  'CTIC',
  'CTL',
  'CTO',
  'CTRE',
  'CTRL',
  'CTRN',
  'CTRX',
  'CTS',
  'CTSH',
  'CTWS',
  'CTXS',
  'CUB',
  'CUBI',
  'CUI',
  'CUNB',
  'CUR',
  'CUTR',
  'CUZ',
  'CVA',
  'CVBF',
  'CVC',
  'CVCO',
  'CVD',
  'CVG',
  'CVGI',
  'CVGW',
  'CVI',
  'CVLT',
  'CVO',
  'CVS',
  'CVT',
  'CVX',
  'CW',
  'CWCO',
  'CWEI',
  'CWST',
  'CWT',
  'CXO',
  'CXW',
  'CY',
  'CYBX',
  'CYH',
  'CYN',
  'CYNI',
  'CYNO',
  'CYT',
  'CYTK',
  'CYTR',
  'CYTX',
  'CZNC',
  'CZR',
  'D',
  'DAKT',
  'DAL',
  'DAN',
  'DAR',
  'DATA',
  'DAVE',
  'DBD',
  'DCI',
  'DCO',
  'DCOM',
  'DCT',
  'DD',
  'DDD',
  'DDS',
  'DE',
  'DECK',
  'DEI',
  'DEL',
  'DELL',
  'DENN',
  'DEPO',
  'DEST',
  'DF',
  'DFRG',
  'DFS',
  'DFT',
  'DFZ',
  'DG',
  'DGAS',
  'DGI',
  'DGICA',
  'DGII',
  'DGX',
  'DHI',
  'DHIL',
  'DHR',
  'DHX',
  'DIN',
  'DIOD',
  'DIS',
  'DISCA',
  'DISH',
  'DJCO',
  'DK',
  'DKS',
  'DLB',
  'DLLR',
  'DLPH',
  'DLR',
  'DLTR',
  'DLX',
  'DMD',
  'DMND',
  'DMRC',
  'DNB',
  'DNDN',
  'DNKN',
  'DNR',
  'DO',
  'DOC',
  'DOOR',
  'DORM',
  'DOV',
  'DOW',
  'DOX',
  'DPS',
  'DPZ',
  'DRC',
  'DRE',
  'DRH',
  'DRI',
  'DRII',
  'DRIV',
  'DRL',
  'DRQ',
  'DRTX',
  'DSCI',
  'DSPG',
  'DST',
  'DSW',
  'DTE',
  'DTLK',
  'DTSI',
  'DTV',
  'DUK',
  'DV',
  'DVA',
  'DVAX',
  'DVN',
  'DVR',
  'DW',
  'DWA',
  'DWRE',
  'DWSN',
  'DX',
  'DXCM',
  'DXLG',
  'DXM',
  'DXPE',
  'DXYN',
  'DY',
  'DYAX',
  'DYN',
  'EA',
  'EAC',
  'EAT',
  'EBAY',
  'EBF',
  'EBIX',
  'EBS',
  'EBSB',
  'EBTC',
  'ECHO',
  'ECL',
  'ECOL',
  'ECOM',
  'ECPG',
  'ECYT',
  'ED',
  'EDE',
  'EDIG',
  'EDMC',
  'EDR',
  'EE',
  'EEFT',
  'EFII',
  'EFSC',
  'EFX',
  'EGAN',
  'EGBN',
  'EGHT',
  'EGL',
  'EGN',
  'EGOV',
  'EGP',
  'EGY',
  'EHTH',
  'EIG',
  'EIGI',
  'EIX',
  'EL',
  'ELGX',
  'ELLI',
  'ELNK',
  'ELRC',
  'ELS',
  'ELX',
  'ELY',
  'EMC',
  'EMCI',
  'EME',
  'EMN',
  'EMR',
  'END',
  'ENDP',
  'ENH',
  'ENOC',
  'ENPH',
  'ENR',
  'ENS',
  'ENSG',
  'ENT',
  'ENTA',
  'ENTG',
  'ENTR',
  'ENV',
  'ENVE',
  'ENZ',
  'ENZN',
  'EOG',
  'EOPN',
  'EOX',
  'EPAM',
  'EPAY',
  'EPIQ',
  'EPL',
  'EPM',
  'EPZM',
  'EQIX',
  'EQR',
  'EQT',
  'EQU',
  'EQY',
  'ERA',
  'ERIE',
  'ERII',
  'ES',
  'ESBF',
  'ESC',
  'ESCA',
  'ESE',
  'ESGR',
  'ESI',
  'ESIO',
  'ESL',
  'ESPR',
  'ESRT',
  'ESRX',
  'ESS',
  'ESSA',
  'ESV',
  'ETFC',
  'ETH',
  'ETM',
  'ETN',
  'ETR',
  'EV',
  'EVC',
  'EVER',
  'EVR',
  'EVRY',
  'EVTC',
  'EW',
  'EWBC',
  'EXAC',
  'EXAM',
  'EXAR',
  'EXAS',
  'EXC',
  'EXEL',
  'EXH',
  'EXL',
  'EXLS',
  'EXP',
  'EXPD',
  'EXPE',
  'EXPO',
  'EXPR',
  'EXR',
  'EXTR',
  'EXXI',
  'EZPW',
  'F',
  'FAF',
  'FANG',
  'FARM',
  'FARO',
  'FAST',
  'FB',
  'FBC',
  'FBHS',
  'FBIZ',
  'FBNC',
  'FBNK',
  'FBP',
  'FBRC',
  'FC',
  'FCBC',
  'FCEL',
  'FCF',
  'FCFS',
  'FCN',
  'FCNCA',
  'FCS',
  'FCSC',
  'FCX',
  'FDEF',
  'FDML',
  'FDO',
  'FDP',
  'FDS',
  'FDUS',
  'FDX',
  'FE',
  'FEIC',
  'FELE',
  'FET',
  'FF',
  'FFBC',
  'FFBH',
  'FFG',
  'FFIC',
  'FFIN',
  'FFIV',
  'FFKT',
  'FFNW',
  'FHCO',
  'FHN',
  'FIBK',
  'FICO',
  'FII',
  'FINL',
  'FIO',
  'FIS',
  'FISI',
  'FISV',
  'FITB',
  'FIVE',
  'FIX',
  'FIZZ',
  'FL',
  'FLDM',
  'FLIC',
  'FLIR',
  'FLO',
  'FLR',
  'FLS',
  'FLT',
  'FLTX',
  'FLWS',
  'FLXS',
  'FMBI',
  'FMC',
  'FMD',
  'FMER',
  'FMI',
  'FN',
  'FNB',
  'FNF',
  'FNFG',
  'FNGN',
  'FNHC',
  'FNLC',
  'FNSR',
  'FOE',
  'FOLD',
  'FOR',
  'FORM',
  'FORR',
  'FOSL',
  'FOX',
  'FOXA',
  'FOXF',
  'FPO',
  'FPRX',
  'FR',
  'FRAN',
  'FRBK',
  'FRC',
  'FRED',
  'FRF',
  'FRGI',
  'FRM',
  'FRME',
  'FRNK',
  'FRO',
  'FRP',
  'FRT',
  'FRX',
  'FSC',
  'FSGI',
  'FSL',
  'FSLR',
  'FSP',
  'FSS',
  'FST',
  'FSTR',
  'FSYS',
  'FTD',
  'FTI',
  'FTK',
  'FTNT',
  'FTR',
  'FUBC',
  'FUEL',
  'FUL',
  'FULT',
  'FURX',
  'FVE',
  'FWM',
  'FWRD',
  'FXCB',
  'FXCM',
  'FXEN',
  'G',
  'GABC',
  'GAIA',
  'GAIN',
  'GALE',
  'GARS',
  'GAS',
  'GB',
  'GBCI',
  'GBDC',
  'GBL',
  'GBLI',
  'GBNK',
  'GBX',
  'GCA',
  'GCAP',
  'GCI',
  'GCO',
  'GD',
  'GDOT',
  'GDP',
  'GE',
  'GEF',
  'GEO',
  'GEOS',
  'GERN',
  'GES',
  'GEVA',
  'GFF',
  'GFIG',
  'GFN',
  'GGG',
  'GGP',
  'GHC',
  'GHDX',
  'GHL',
  'GHM',
  'GIFI',
  'GIII',
  'GILD',
  'GIMO',
  'GIS',
  'GK',
  'GLAD',
  'GLDD',
  'GLF',
  'GLNG',
  'GLOG',
  'GLPW',
  'GLRE',
  'GLT',
  'GLUU',
  'GLW',
  'GM',
  'GMAN',
  'GMCR',
  'GME',
  'GMED',
  'GMO',
  'GMT',
  'GNC',
  'GNCMA',
  'GNE',
  'GNMK',
  'GNRC',
  'GNTX',
  'GNW',
  'GOGO',
  'GOOD',
  'GOOG',
  'GOOGL',
  'GORO',
  'GOV',
  'GPC',
  'GPI',
  'GPK',
  'GPN',
  'GPOR',
  'GPRE',
  'GPS',
  'GPX',
  'GRA',
  'GRC',
  'GRIF',
  'GRMN',
  'GRPN',
  'GRT',
  'GS',
  'GSAT',
  'GSBC',
  'GSIG',
  'GSIT',
  'GSM',
  'GSOL',
  'GST',
  'GSVC',
  'GT',
  'GTAT',
  'GTI',
  'GTIV',
  'GTLS',
  'GTN',
  'GTS',
  'GTXI',
  'GTY',
  'GUID',
  'GVA',
  'GWR',
  'GWRE',
  'GWW',
  'GXP',
  'GY',
  'H',
  'HA',
  'HAE',
  'HAFC',
  'HAIN',
  'HAL',
  'HALL',
  'HALO',
  'HAR',
  'HAS',
  'HASI',
  'HAWK',
  'HAYN',
  'HBAN',
  'HBCP',
  'HBHC',
  'HBI',
  'HBIO',
  'HBNC',
  'HCA',
  'HCBK',
  'HCC',
  'HCCI',
  'HCI',
  'HCKT',
  'HCN',
  'HCOM',
  'HCP',
  'HCSG',
  'HD',
  'HDNG',
  'HE',
  'HEES',
  'HEI',
  'HELE',
  'HEOP',
  'HERO',
  'HES',
  'HF',
  'HFC',
  'HFWA',
  'HGG',
  'HGR',
  'HHC',
  'HHS',
  'HI',
  'HIBB',
  'HIFS',
  'HIG',
  'HII',
  'HIIQ',
  'HIL',
  'HILL',
  'HITK',
  'HITT',
  'HIW',
  'HK',
  'HL',
  'HLF',
  'HLIT',
  'HLS',
  'HLSS',
  'HLX',
  'HME',
  'HMN',
  'HMPR',
  'HMST',
  'HMSY',
  'HMTV',
  'HNH',
  'HNI',
  'HNRG',
  'HNT',
  'HOFT',
  'HOG',
  'HOLX',
  'HOMB',
  'HOME',
  'HON',
  'HOS',
  'HOT',
  'HOV',
  'HP',
  'HPP',
  'HPQ',
  'HPT',
  'HPTX',
  'HPY',
  'HR',
  'HRB',
  'HRC',
  'HRG',
  'HRL',
  'HRS',
  'HRZN',
  'HSC',
  'HSH',
  'HSIC',
  'HSII',
  'HSNI',
  'HSP',
  'HST',
  'HSTM',
  'HSY',
  'HT',
  'HTBI',
  'HTBK',
  'HTCH',
  'HTCO',
  'HTGC',
  'HTH',
  'HTLD',
  'HTLF',
  'HTS',
  'HTWR',
  'HTZ',
  'HUBG',
  'HUM',
  'HUN',
  'HURC',
  'HURN',
  'HVB',
  'HVT',
  'HW',
  'HWAY',
  'HWCC',
  'HWKN',
  'HXL',
  'HY',
  'HZNP',
  'HZO',
  'I',
  'IACI',
  'IART',
  'IBCA',
  'IBCP',
  'IBKC',
  'IBKR',
  'IBM',
  'IBOC',
  'IBTX',
  'ICE',
  'ICEL',
  'ICFI',
  'ICGE',
  'ICON',
  'ICPT',
  'ICUI',
  'IDA',
  'IDCC',
  'IDIX',
  'IDRA',
  'IDT',
  'IDTI',
  'IDXX',
  'IEX',
  'IFF',
  'IFT',
  'IG',
  'IGT',
  'IGTE',
  'IHC',
  'IHS',
  'IIIN',
  'IILG',
  'IIVI',
  'IL',
  'ILMN',
  'IM',
  'IMGN',
  'IMI',
  'IMKTA',
  'IMMR',
  'IMMU',
  'IMN',
  'IMPV',
  'INAP',
  'INCY',
  'INDB',
  'INFA',
  'INFI',
  'INFN',
  'INGR',
  'ININ',
  'INN',
  'INO',
  'INSM',
  'INSY',
  'INT',
  'INTC',
  'INTL',
  'INTU',
  'INTX',
  'INVN',
  'INWK',
  'IO',
  'IOSP',
  'IP',
  'IPAR',
  'IPCC',
  'IPCM',
  'IPG',
  'IPGP',
  'IPHI',
  'IPHS',
  'IPI',
  'IPXL',
  'IQNT',
  'IR',
  'IRBT',
  'IRC',
  'IRDM',
  'IRET',
  'IRF',
  'IRG',
  'IRM',
  'IRWD',
  'ISBC',
  'ISCA',
  'ISH',
  'ISIL',
  'ISIS',
  'ISLE',
  'ISRG',
  'ISRL',
  'ISSC',
  'ISSI',
  'IT',
  'ITC',
  'ITG',
  'ITIC',
  'ITMN',
  'ITRI',
  'ITT',
  'ITW',
  'IVAC',
  'IVC',
  'IVR',
  'IVZ',
  'JACK',
  'JAH',
  'JAKK',
  'JBHT',
  'JBL',
  'JBLU',
  'JBSS',
  'JBT',
  'JCI',
  'JCOM',
  'JCP',
  'JDSU',
  'JEC',
  'JGW',
  'JIVE',
  'JJSF',
  'JKHY',
  'JLL',
  'JMBA',
  'JNJ',
  'JNPR',
  'JNS',
  'JNY',
  'JOE',
  'JONE',
  'JOUT',
  'JOY',
  'JPM',
  'JRN',
  'JWN',
  'K',
  'KAI',
  'KALU',
  'KAMN',
  'KAR',
  'KBH',
  'KBR',
  'KCG',
  'KCLI',
  'KEG',
  'KELYA',
  'KEM',
  'KERX',
  'KEX',
  'KEY',
  'KEYW',
  'KFRC',
  'KFY',
  'KIM',
  'KIRK',
  'KKD',
  'KLAC',
  'KMB',
  'KMG',
  'KMI',
  'KMPR',
  'KMT',
  'KMX',
  'KND',
  'KNL',
  'KNX',
  'KO',
  'KOG',
  'KOP',
  'KOPN',
  'KORS',
  'KOS',
  'KR',
  'KRA',
  'KRC',
  'KRFT',
  'KRG',
  'KRO',
  'KS',
  'KSS',
  'KSU',
  'KTOS',
  'KVHI',
  'KWK',
  'KWR',
  'KYTH',
  'L',
  'LABL',
  'LAD',
  'LAMR',
  'LANC',
  'LAYN',
  'LAZ',
  'LB',
  'LBAI',
  'LBMH',
  'LBTYA',
  'LBY',
  'LCI',
  'LCNB',
  'LCUT',
  'LDL',
  'LDOS',
  'LDR',
  'LDRH',
  'LEA',
  'LECO',
  'LEE',
  'LEG',
  'LEN',
  'LF',
  'LFUS',
  'LFVN',
  'LG',
  'LGF',
  'LGIH',
  'LGND',
  'LH',
  'LHCG',
  'LHO',
  'LIFE',
  'LII',
  'LINC',
  'LINTA',
  'LION',
  'LIOX',
  'LKFN',
  'LKQ',
  'LL',
  'LLEN',
  'LLL',
  'LLNW',
  'LLTC',
  'LLY',
  'LM',
  'LMCA',
  'LMIA',
  'LMNR',
  'LMNX',
  'LMOS',
  'LMT',
  'LNC',
  'LNCE',
  'LNDC',
  'LNG',
  'LNKD',
  'LNN',
  'LNT',
  'LO',
  'LOCK',
  'LOGM',
  'LOPE',
  'LORL',
  'LOV',
  'LOW',
  'LPI',
  'LPLA',
  'LPNT',
  'LPSN',
  'LPX',
  'LQDT',
  'LRCX',
  'LRN',
  'LSCC',
  'LSI',
  'LSTR',
  'LTC',
  'LTM',
  'LTS',
  'LTXC',
  'LUB',
  'LUK',
  'LUV',
  'LVLT',
  'LVNTA',
  'LVS',
  'LWAY',
  'LXK',
  'LXP',
  'LXRX',
  'LXU',
  'LYB',
  'LYTS',
  'LYV',
  'LZB',
  'M',
  'MA',
  'MAC',
  'MACK',
  'MAIN',
  'MAN',
  'MANH',
  'MANT',
  'MAR',
  'MAS',
  'MASI',
  'MAT',
  'MATW',
  'MATX',
  'MBFI',
  'MBI',
  'MBII',
  'MBRG',
  'MBVT',
  'MBWM',
  'MCBC',
  'MCC',
  'MCD',
  'MCF',
  'MCGC',
  'MCHP',
  'MCHX',
  'MCK',
  'MCO',
  'MCP',
  'MCRI',
  'MCRL',
  'MCRS',
  'MCS',
  'MCY',
  'MD',
  'MDAS',
  'MDC',
  'MDCA',
  'MDCI',
  'MDCO',
  'MDLZ',
  'MDP',
  'MDR',
  'MDRX',
  'MDSO',
  'MDT',
  'MDU',
  'MDVN',
  'MDW',
  'MDXG',
  'MEAS',
  'MED',
  'MEG',
  'MEI',
  'MEIP',
  'MENT',
  'MET',
  'METR',
  'MFA',
  'MFLX',
  'MFRM',
  'MG',
  'MGAM',
  'MGEE',
  'MGI',
  'MGLN',
  'MGM',
  'MGNX',
  'MGRC',
  'MHFI',
  'MHGC',
  'MHK',
  'MHLD',
  'MHO',
  'MHR',
  'MIDD',
  'MIG',
  'MILL',
  'MIND',
  'MINI',
  'MITK',
  'MITT',
  'MJN',
  'MKC',
  'MKL',
  'MKSI',
  'MKTO',
  'MKTX',
  'MLAB',
  'MLHR',
  'MLI',
  'MLM',
  'MLNK',
  'MLR',
  'MM',
  'MMC',
  'MMI',
  'MMM',
  'MMS',
  'MMSI',
  'MN',
  'MNI',
  'MNK',
  'MNKD',
  'MNRO',
  'MNST',
  'MNTA',
  'MNTX',
  'MO',
  'MOD',
  'MODN',
  'MOFG',
  'MOH',
  'MON',
  'MORN',
  'MOS',
  'MOSY',
  'MOV',
  'MOVE',
  'MPAA',
  'MPC',
  'MPO',
  'MPWR',
  'MPX',
  'MRC',
  'MRCY',
  'MRGE',
  'MRH',
  'MRIN',
  'MRK',
  'MRLN',
  'MRO',
  'MRTN',
  'MRVL',
  'MS',
  'MSA',
  'MSCC',
  'MSCI',
  'MSEX',
  'MSFG',
  'MSFT',
  'MSG',
  'MSI',
  'MSL',
  'MSM',
  'MSO',
  'MSTR',
  'MTB',
  'MTD',
  'MTDR',
  'MTG',
  'MTGE',
  'MTH',
  'MTN',
  'MTOR',
  'MTRN',
  'MTRX',
  'MTSC',
  'MTSI',
  'MTW',
  'MTX',
  'MTZ',
  'MU',
  'MUR',
  'MUSA',
  'MVC',
  'MW',
  'MWA',
  'MWIV',
  'MWV',
  'MWW',
  'MXIM',
  'MXL',
  'MXWL',
  'MYCC',
  'MYE',
  'MYGN',
  'MYL',
  'MYRG',
  'N',
  'NANO',
  'NASB',
  'NAT',
  'NATH',
  'NATI',
  'NATL',
  'NATR',
  'NAV',
  'NAVB',
  'NAVG',
  'NAVI',
  'NBBC',
  'NBCB',
  'NBHC',
  'NBIX',
  'NBL',
  'NBR',
  'NBTB',
  'NC',
  'NCFT',
  'NCI',
  'NCLH',
  'NCMI',
  'NCR',
  'NCS',
  'NDAQ',
  'NDLS',
  'NDSN',
  'NE',
  'NEE',
  'NEM',
  'NEO',
  'NEOG',
  'NEON',
  'NES',
  'NETE',
  'NEU',
  'NEWP',
  'NEWS',
  'NFBK',
  'NFG',
  'NFLX',
  'NFX',
  'NGPC',
  'NGS',
  'NGVC',
  'NHC',
  'NI',
  'NICK',
  'NIHD',
  'NILE',
  'NJR',
  'NKE',
  'NKSH',
  'NKTR',
  'NL',
  'NLNK',
  'NLS',
  'NLSN',
  'NLY',
  'NMFC',
  'NMIH',
  'NMRX',
  'NNBR',
  'NNI',
  'NOC',
  'NOG',
  'NOR',
  'NOV',
  'NOW',
  'NP',
  'NPBC',
  'NPK',
  'NPO',
  'NPSP',
  'NPTN',
  'NR',
  'NRCIA',
  'NRG',
  'NRIM',
  'NRZ',
  'NSC',
  'NSIT',
  'NSM',
  'NSP',
  'NSPH',
  'NSR',
  'NSTG',
  'NTAP',
  'NTCT',
  'NTGR',
  'NTK',
  'NTLS',
  'NTRI',
  'NTRS',
  'NU',
  'NUAN',
  'NUE',
  'NUS',
  'NUTR',
  'NUVA',
  'NVAX',
  'NVDA',
  'NVEC',
  'NVR',
  'NWBI',
  'NWE',
  'NWL',
  'NWLI',
  'NWN',
  'NWPX',
  'NWSA',
  'NWY',
  'NX',
  'NXST',
  'NXTM',
  'NYCB',
  'NYLD',
  'NYMT',
  'NYNY',
  'NYT',
  'O',
  'OABC',
  'OAS',
  'OB',
  'OC',
  'OCFC',
  'OCLR',
  'OCN',
  'OCR',
  'ODC',
  'ODFL',
  'ODP',
  'OEH',
  'OFC',
  'OFG',
  'OFIX',
  'OFLX',
  'OGE',
  'OGS',
  'OGXI',
  'OHI',
  'OHRP',
  'OI',
  'OII',
  'OIS',
  'OKE',
  'OKSB',
  'OLED',
  'OLN',
  'OLP',
  'OMC',
  'OMCL',
  'OME',
  'OMED',
  'OMER',
  'OMEX',
  'OMG',
  'OMI',
  'OMN',
  'ONB',
  'ONE',
  'ONNN',
  'ONTY',
  'OPEN',
  'OPHT',
  'OPK',
  'OPLK',
  'OPY',
  'ORA',
  'ORB',
  'ORBC',
  'ORCL',
  'OREX',
  'ORI',
  'ORIT',
  'ORLY',
  'ORN',
  'OSIR',
  'OSIS',
  'OSK',
  'OSTK',
  'OSUR',
  'OTTR',
  'OUTR',
  'OVAS',
  'OVTI',
  'OWW',
  'OXM',
  'OXY',
  'OZRK',
  'P',
  'PACB',
  'PACR',
  'PACW',
  'PAG',
  'PANW',
  'PATK',
  'PATR',
  'PAY',
  'PAYX',
  'PB',
  'PBCT',
  'PBF',
  'PBH',
  'PBI',
  'PBPB',
  'PBY',
  'PBYI',
  'PCAR',
  'PCBK',
  'PCCC',
  'PCG',
  'PCH',
  'PCL',
  'PCLN',
  'PCO',
  'PCP',
  'PCRX',
  'PCTI',
  'PCYC',
  'PCYG',
  'PCYO',
  'PDCE',
  'PDCO',
  'PDFS',
  'PDLI',
  'PE',
  'PEBO',
  'PEG',
  'PEGA',
  'PEI',
  'PEIX',
  'PENN',
  'PENX',
  'PEP',
  'PERY',
  'PES',
  'PETM',
  'PETS',
  'PETX',
  'PF',
  'PFBC',
  'PFE',
  'PFG',
  'PFLT',
  'PFMT',
  'PFPT',
  'PFS',
  'PFSI',
  'PG',
  'PGC',
  'PGEM',
  'PGI',
  'PGNX',
  'PGR',
  'PGTI',
  'PH',
  'PHH',
  'PHIIK',
  'PHM',
  'PHMD',
  'PHX',
  'PICO',
  'PII',
  'PIKE',
  'PIR',
  'PJC',
  'PKD',
  'PKE',
  'PKG',
  'PKI',
  'PKOH',
  'PKT',
  'PKY',
  'PL',
  'PLAB',
  'PLCE',
  'PLCM',
  'PLD',
  'PLKI',
  'PLL',
  'PLMT',
  'PLOW',
  'PLPC',
  'PLPM',
  'PLT',
  'PLUG',
  'PLUS',
  'PLXS',
  'PLXT',
  'PM',
  'PMC',
  'PMCS',
  'PMFG',
  'PMT',
  'PNC',
  'PNFP',
  'PNK',
  'PNM',
  'PNNT',
  'PNR',
  'PNRA',
  'PNW',
  'PNX',
  'PNY',
  'PODD',
  'POL',
  'POM',
  'POOL',
  'POR',
  'POST',
  'POWI',
  'POWL',
  'POWR',
  'POZN',
  'PPBI',
  'PPC',
  'PPG',
  'PPHM',
  'PPL',
  'PPO',
  'PPS',
  'PQ',
  'PRA',
  'PRAA',
  'PRE',
  'PRFT',
  'PRGO',
  'PRGS',
  'PRGX',
  'PRI',
  'PRIM',
  'PRK',
  'PRKR',
  'PRLB',
  'PRO',
  'PROV',
  'PRSC',
  'PRTA',
  'PRU',
  'PRXL',
  'PSA',
  'PSB',
  'PSEC',
  'PSEM',
  'PSIX',
  'PSMI',
  'PSMT',
  'PSTB',
  'PSUN',
  'PSX',
  'PTCT',
  'PTEN',
  'PTGI',
  'PTIE',
  'PTLA',
  'PTP',
  'PTRY',
  'PTSI',
  'PTX',
  'PVA',
  'PVH',
  'PVTB',
  'PWOD',
  'PWR',
  'PX',
  'PXD',
  'PZG',
  'PZN',
  'PZZA',
  'Q',
  'QADA',
  'QCOM',
  'QCOR',
  'QDEL',
  'QEP',
  'QGEN',
  'QLGC',
  'QLIK',
  'QLTY',
  'QLYS',
  'QNST',
  'QSII',
  'QTM',
  'QTS',
  'QUAD',
  'QUIK',
  'R',
  'RAD',
  'RAI',
  'RAIL',
  'RALY',
  'RAS',
  'RATE',
  'RAVN',
  'RAX',
  'RBC',
  'RBCAA',
  'RBCN',
  'RCAP',
  'RCII',
  'RCKB',
  'RCL',
  'RCPT',
  'RDC',
  'RDEN',
  'RDI',
  'RDN',
  'RE',
  'RECN',
  'REG',
  'REGI',
  'REGN',
  'REIS',
  'RELL',
  'REMY',
  'REN',
  'RENT',
  'RES',
  'RESI',
  'REV',
  'REX',
  'REXI',
  'REXR',
  'REXX',
  'RF',
  'RFMD',
  'RFP',
  'RGA',
  'RGC',
  'RGDO',
  'RGEN',
  'RGLD',
  'RGLS',
  'RGR',
  'RGS',
  'RH',
  'RHI',
  'RHT',
  'RIG',
  'RIGL',
  'RJET',
  'RJF',
  'RKT',
  'RKUS',
  'RL',
  'RLD',
  'RLGY',
  'RLI',
  'RLJ',
  'RLOC',
  'RM',
  'RMBS',
  'RMD',
  'RMTI',
  'RNDY',
  'RNET',
  'RNG',
  'RNR',
  'RNST',
  'RNWK',
  'ROC',
  'ROCK',
  'ROG',
  'ROIAK',
  'ROIC',
  'ROK',
  'ROL',
  'ROLL',
  'ROP',
  'ROSE',
  'ROST',
  'ROVI',
  'RP',
  'RPM',
  'RPRX',
  'RPT',
  'RPTP',
  'RPXC',
  'RRC',
  'RRD',
  'RRGB',
  'RRTS',
  'RS',
  'RSE',
  'RSG',
  'RSH',
  'RSPP',
  'RST',
  'RSTI',
  'RSYS',
  'RT',
  'RTEC',
  'RTI',
  'RTIX',
  'RTK',
  'RTN',
  'RUSHA',
  'RUTH',
  'RVBD',
  'RVLT',
  'RWT',
  'RXN',
  'RYL',
  'RYN',
  'S',
  'SAAS',
  'SAFM',
  'SAFT',
  'SAH',
  'SAIA',
  'SAIC',
  'SALE',
  'SALM',
  'SAM',
  'SAMG',
  'SANM',
  'SAPE',
  'SASR',
  'SATS',
  'SAVE',
  'SBAC',
  'SBCF',
  'SBGI',
  'SBH',
  'SBNY',
  'SBRA',
  'SBSI',
  'SBUX',
  'SBY',
  'SCAI',
  'SCBT',
  'SCCO',
  'SCG',
  'SCHL',
  'SCHN',
  'SCHW',
  'SCI',
  'SCL',
  'SCLN',
  'SCM',
  'SCMP',
  'SCOR',
  'SCS',
  'SCSC',
  'SCSS',
  'SCTY',
  'SCVL',
  'SD',
  'SDRL',
  'SE',
  'SEAC',
  'SEAS',
  'SEB',
  'SEE',
  'SEIC',
  'SEM',
  'SEMG',
  'SENEA',
  'SF',
  'SFE',
  'SFG',
  'SFL',
  'SFLY',
  'SFNC',
  'SFXE',
  'SFY',
  'SGA',
  'SGEN',
  'SGI',
  'SGK',
  'SGMO',
  'SGMS',
  'SGNT',
  'SGY',
  'SGYP',
  'SHEN',
  'SHLD',
  'SHLM',
  'SHLO',
  'SHO',
  'SHOO',
  'SHOR',
  'SHOS',
  'SHW',
  'SIAL',
  'SIF',
  'SIG',
  'SIGA',
  'SIGI',
  'SIGM',
  'SIMG',
  'SIR',
  'SIRI',
  'SIRO',
  'SIVB',
  'SIX',
  'SJI',
  'SJM',
  'SJW',
  'SKH',
  'SKT',
  'SKUL',
  'SKX',
  'SKYW',
  'SLAB',
  'SLB',
  'SLCA',
  'SLG',
  'SLGN',
  'SLH',
  'SLM',
  'SLRC',
  'SLXP',
  'SM',
  'SMA',
  'SMCI',
  'SMG',
  'SMP',
  'SMRT',
  'SMTC',
  'SN',
  'SNA',
  'SNAK',
  'SNBC',
  'SNCR',
  'SNDK',
  'SNH',
  'SNHY',
  'SNI',
  'SNMX',
  'SNPS',
  'SNSS',
  'SNTA',
  'SNV',
  'SNX',
  'SO',
  'SON',
  'SONC',
  'SONS',
  'SP',
  'SPA',
  'SPAR',
  'SPB',
  'SPF',
  'SPG',
  'SPLK',
  'SPLS',
  'SPN',
  'SPNC',
  'SPNS',
  'SPPI',
  'SPR',
  'SPRT',
  'SPSC',
  'SPTN',
  'SPW',
  'SPWR',
  'SQI',
  'SQNM',
  'SRCE',
  'SRCL',
  'SRDX',
  'SRE',
  'SREV',
  'SRI',
  'SRPT',
  'SSD',
  'SSI',
  'SSNC',
  'SSNI',
  'SSP',
  'SSS',
  'SSTK',
  'SSYS',
  'STAA',
  'STAG',
  'STAR',
  'STBA',
  'STBZ',
  'STC',
  'STCK',
  'STE',
  'STFC',
  'STI',
  'STJ',
  'STL',
  'STLD',
  'STML',
  'STMP',
  'STNG',
  'STNR',
  'STR',
  'STRA',
  'STRL',
  'STRT',
  'STRZA',
  'STSA',
  'STSI',
  'STT',
  'STWD',
  'STX',
  'STZ',
  'SUBK',
  'SUI',
  'SUNE',
  'SUNS',
  'SUP',
  'SUPN',
  'SUPX',
  'SUSQ',
  'SUSS',
  'SVU',
  'SVVC',
  'SWC',
  'SWFT',
  'SWHC',
  'SWI',
  'SWK',
  'SWKS',
  'SWM',
  'SWN',
  'SWS',
  'SWSH',
  'SWX',
  'SWY',
  'SXC',
  'SXI',
  'SXT',
  'SYA',
  'SYBT',
  'SYK',
  'SYKE',
  'SYMC',
  'SYNA',
  'SYNT',
  'SYRG',
  'SYUT',
  'SYX',
  'SYY',
  'SZYM',
  'T',
  'TAHO',
  'TAL',
  'TAM',
  'TAP',
  'TASR',
  'TAST',
  'TAX',
  'TAXI',
  'TAYC',
  'TBBK',
  'TBI',
  'TBNK',
  'TCAP',
  'TCB',
  'TCBI',
  'TCBK',
  'TCO',
  'TCPC',
  'TCRD',
  'TCS',
  'TDC',
  'TDG',
  'TDS',
  'TDW',
  'TDY',
  'TE',
  'TEAR',
  'TECD',
  'TECH',
  'TECUA',
  'TEG',
  'TEL',
  'TEN',
  'TER',
  'TESO',
  'TESS',
  'TEX',
  'TFM',
  'TFSL',
  'TFX',
  'TG',
  'TGE',
  'TGH',
  'TGI',
  'TGT',
  'TGTX',
  'THC',
  'THFF',
  'THG',
  'THLD',
  'THO',
  'THOR',
  'THR',
  'THRM',
  'THRX',
  'THS',
  'TIBX',
  'TICC',
  'TIF',
  'TILE',
  'TIME',
  'TIS',
  'TISI',
  'TITN',
  'TIVO',
  'TJX',
  'TK',
  'TKR',
  'TLYS',
  'TMH',
  'TMHC',
  'TMK',
  'TMO',
  'TMP',
  'TMUS',
  'TNAV',
  'TNC',
  'TNGO',
  'TNK',
  'TOL',
  'TOWN',
  'TOWR',
  'TPC',
  'TPH',
  'TPLM',
  'TPRE',
  'TPX',
  'TQNT',
  'TR',
  'TRAK',
  'TRC',
  'TREC',
  'TREE',
  'TREX',
  'TRGP',
  'TRGT',
  'TRI',
  'TRIP',
  'TRK',
  'TRLA',
  'TRMB',
  'TRMK',
  'TRMR',
  'TRN',
  'TRNO',
  'TRNX',
  'TROW',
  'TROX',
  'TRR',
  'TRS',
  'TRST',
  'TRV',
  'TRW',
  'TSC',
  'TSCO',
  'TSLA',
  'TSN',
  'TSO',
  'TSRA',
  'TSRO',
  'TSS',
  'TSYS',
  'TTC',
  'TTEC',
  'TTEK',
  'TTGT',
  'TTI',
  'TTMI',
  'TTPH',
  'TTS',
  'TTWO',
  'TUES',
  'TUMI',
  'TUP',
  'TW',
  'TWC',
  'TWER',
  'TWGP',
  'TWI',
  'TWIN',
  'TWMC',
  'TWO',
  'TWTC',
  'TWTR',
  'TWX',
  'TXI',
  'TXMD',
  'TXN',
  'TXRH',
  'TXT',
  'TXTR',
  'TYC',
  'TYL',
  'TYPE',
  'TZOO',
  'UA',
  'UACL',
  'UAL',
  'UAM',
  'UBA',
  'UBNK',
  'UBNT',
  'UBSH',
  'UBSI',
  'UCBI',
  'UCFC',
  'UCP',
  'UCTT',
  'UDR',
  'UEC',
  'UEIC',
  'UFCS',
  'UFI',
  'UFPI',
  'UFPT',
  'UFS',
  'UGI',
  'UHAL',
  'UHS',
  'UHT',
  'UIHC',
  'UIL',
  'UIS',
  'ULTA',
  'ULTI',
  'ULTR',
  'UMBF',
  'UMH',
  'UMPQ',
  'UNF',
  'UNFI',
  'UNH',
  'UNIS',
  'UNM',
  'UNP',
  'UNS',
  'UNT',
  'UNTD',
  'UNXL',
  'UPIP',
  'UPL',
  'UPS',
  'URBN',
  'URG',
  'URI',
  'URS',
  'USAK',
  'USAP',
  'USB',
  'USCR',
  'USG',
  'USLM',
  'USM',
  'USMD',
  'USMO',
  'USNA',
  'USPH',
  'USTR',
  'UTEK',
  'UTHR',
  'UTI',
  'UTIW',
  'UTL',
  'UTMD',
  'UTX',
  'UVE',
  'UVSP',
  'UVV',
  'V',
  'VAC',
  'VAL',
  'VAR',
  'VASC',
  'VC',
  'VCRA',
  'VCYT',
  'VDSI',
  'VECO',
  'VFC',
  'VG',
  'VGR',
  'VHC',
  'VIAB',
  'VIAS',
  'VICL',
  'VICR',
  'VITC',
  'VIVO',
  'VLGEA',
  'VLO',
  'VLY',
  'VMC',
  'VMEM',
  'VMI',
  'VMW',
  'VNDA',
  'VNO',
  'VNTV',
  'VOCS',
  'VOLC',
  'VOXX',
  'VOYA',
  'VPFG',
  'VPG',
  'VPRT',
  'VR',
  'VRA',
  'VRNG',
  'VRNT',
  'VRSK',
  'VRSN',
  'VRTS',
  'VRTU',
  'VRTX',
  'VSAT',
  'VSEC',
  'VSH',
  'VSI',
  'VSTM',
  'VTG',
  'VTNR',
  'VTR',
  'VVC',
  'VVI',
  'VVTV',
  'VVUS',
  'VZ',
  'WAB',
  'WABC',
  'WAC',
  'WAFD',
  'WAG',
  'WAGE',
  'WAIR',
  'WAL',
  'WASH',
  'WAT',
  'WBA',
  'WBC',
  'WBCO',
  'WBMD',
  'WBS',
  'WCC',
  'WCG',
  'WCIC',
  'WCN',
  'WD',
  'WDAY',
  'WDC',
  'WDFC',
  'WDR',
  'WEC',
  'WEN',
  'WERN',
  'WETF',
  'WEX',
  'WEYS',
  'WFC',
  'WFD',
  'WFM',
  'WG',
  'WGL',
  'WGO',
  'WHF',
  'WHG',
  'WHR',
  'WIBC',
  'WIFI',
  'WIN',
  'WINA',
  'WIRE',
  'WLB',
  'WLH',
  'WLK',
  'WLL',
  'WLP',
  'WLT',
  'WM',
  'WMAR',
  'WMB',
  'WMC',
  'WMGI',
  'WMK',
  'WMT',
  'WNC',
  'WNR',
  'WOOF',
  'WOR',
  'WPP',
  'WPX',
  'WR',
  'WRB',
  'WRE',
  'WRES',
  'WRI',
  'WRLD',
  'WSBC',
  'WSBF',
  'WSFS',
  'WSM',
  'WSO',
  'WST',
  'WSTC',
  'WSTL',
  'WTBA',
  'WTFC',
  'WTI',
  'WTM',
  'WTR',
  'WTS',
  'WTSL',
  'WTW',
  'WU',
  'WWAV',
  'WWD',
  'WWE',
  'WWW',
  'WWWW',
  'WY',
  'WYN',
  'WYNN',
  'X',
  'XCO',
  'XCRA',
  'XEC',
  'XEL',
  'XL',
  'XLNX',
  'XLRN',
  'XLS',
  'XNPT',
  'XOM',
  'XOMA',
  'XON',
  'XONE',
  'XOOM',
  'XOXO',
  'XPO',
  'XRAY',
  'XRM',
  'XRX',
  'XXIA',
  'XXII',
  'XYL',
  'Y',
  'YDKN',
  'YELP',
  'YHOO',
  'YORW',
  'YRCW',
  'YUM',
  'YUME',
  'Z',
  'ZAGG',
  'ZAZA',
  'ZBRA',
  'ZEP',
  'ZEUS',
  'ZGNX',
  'ZIGO',
  'ZINC',
  'ZION',
  'ZIOP',
  'ZIXI',
  'ZLC',
  'ZLTQ',
  'ZMH',
  'ZNGA',
  'ZQK',
  'ZTS',
  'ZUMZ' ];


// Order Ascending, Only return Adjusted Closing Price
//https://www.quandl.com/api/v1/datasets/WIKI/BLUE.json?column=11&sort_order=asc&trim_start=2012-01-01&trim_end=2013-12-31&auth_token=GCfKzLJiwuSxucYgqHMq

//var stocks = ["REGN","AAPL","BLUE"]

var counter = 0;
var last_stock = stocks[stocks.length-1];    


var start_date = "2007-01-01";
var end_date = "2010-12-27"; 

// var start_date ="2006-07-25";
// var end_date = "2015-07-04";

// var start_date = "2012-06-26"; // Represents entire range
// var end_date = "2015-06-26";   // Must change these values to represent, first period below
// //var periods = [["2014-06-26","2015-06-26"],["2015-03-26","2015-06-26"],["2015-05-26","2015-06-26"]]; // could probably just replcaed period 1 with start_date, end_date

var batches = []; // three periods make up a batch

// TODO: Test the Crash
for (var i = 0; i < 2; i++) { //180
  var anchor = moment(end_date, "YYYY-MM-DD").subtract(i, 'weeks').format('YYYY-MM-DD')
  var period1 = moment(anchor, "YYYY-MM-DD").subtract(1, 'years').format('YYYY-MM-DD')
  var period2 = moment(anchor, "YYYY-MM-DD").subtract(3, 'months').format('YYYY-MM-DD')
  var period3 = moment(anchor, "YYYY-MM-DD").subtract(1, 'months').format('YYYY-MM-DD')

  var batch = [[period1, anchor],[period2, anchor],[period3, anchor]];
  batches.push(batch);
};


//var data = require('./data/constant/backtest_data.json');
var data = require('./data/constant/backtest_data_2007-01-01_to_2011-01-01.json')

backtest(loop_batches(batches));

function backtest (results){
  var backtest_stocks = [];
  for (var i = 0; i < results.length; i++) {
    backtest_stocks.push(select_stocks(results[i]));
  };
  var backtest_returns = [];
  for (var i = 1; i < backtest_stocks.length; i++) { // // 1 since we dont have data a week ahead of most recent selection
    backtest_returns.push(get_returns(backtest_stocks[i]));
  };
  var backtest_results = [];
  for (var i = 0; i < backtest_returns.length; i++) { 
    backtest_results.push(calc_returns(backtest_returns[i]));
  };
  //console.log(backtest_results[0]);
  
  var consolidated_results = [];
  var complete_results = [];
  for (var i = 0; i < backtest_results.length; i++) {
    console.log(backtest_results[i]);
    consolidated_results.push(backtest_results[i]['return']);
    complete_results.push([backtest_results[i]['return'],backtest_results[i]['end_date']])
  };
  complete_results.push({'total_return': ss.sum(consolidated_results)})
  console.log(complete_results);
}

////
function calc_returns(backtest_returns) {
  var results =[];
  for (var i = 0; i < backtest_returns.length; i++) {
    //console.log({"ticker":backtest_returns[i].ticker, "return":(backtest_returns[i].returns.end/backtest_returns[i].returns.start) - 1});
    results.push({"ticker":backtest_returns[i].ticker, "end_date":backtest_returns[i].returns['end_date'], "return":(backtest_returns[i].returns.end/backtest_returns[i].returns.start) - 1});
  };
  var aggregate = [];
  for (var i = 0; i < results.length; i++) {
    aggregate.push(results[i]['return'])
  };
  var aggregated_results = {'return': ss.mean(aggregate), 'results': results}
  return aggregated_results;
}

///// 
///// TODO: edge case for if day lands on a non market day
function get_returns (backtest_group) {
  var group_returns = [];
  //console.log(backtest_group);
  for (var i = 0; i < backtest_group.length; i++) {
    //console.log("1")
    for (var j = 0; j < data.length; j++) {
      //console.log("2")
      //console.log(backtest_group[i].ticker, data[j].ticker);
      if(data[j].ticker == backtest_group[i].ticker){
        //console.log("3")
        //console.log(data[j]);
        for (var k = 0; k < data[j].data.length; k++) {
          //console.log(backtest_group[i].period_start);

          // if(data[j].data[k][0] == backtest_group[i].period_start){
          //   edge_returns(backtest_group[i].period_start);
          // } else {
          //   if(data[j].data[k+1][0] == backtest_group[i].period_start){
          //     edge_returns(backtest_group[i].period_start);
          //   } else {
          //     edge_returns(backtest_group[i].period_start);
          //   }
          // }
            if(data[j].data[k][0] == backtest_group[i].period_start){
              console.log(data[j].ticker, backtest_group[i].ticker, backtest_group[i].period_start, data[j].data[k][1])
              var end_values;
              if(data[j].data[k+3]){end_values =  [data[j].data[k+3][0], data[j].data[k+3][1]]}
              if(data[j].data[k+4]){end_values =  [data[j].data[k+4][0], data[j].data[k+4][1]]}
              if(data[j].data[k+5]){end_values =  [data[j].data[k+5][0], data[j].data[k+5][1]]}
              if(data[j].data[k+6]){end_values =  [data[j].data[k+6][0], data[j].data[k+6][1]]}
              group_returns.push(
                {
                  "ticker":data[j].ticker,
                  "returns":
                    {
                      'start':data[j].data[k][1],//[data[j].data[k][0], data[j].data[k][1]],
                      'start_date': data[j].data[k][0],
                      'end': end_values[1],
                      'end_date': end_values[0]
                    }
                }
              )
            } else {
              group_returns.push(
                {
                  "ticker":data[j].ticker,
                  "returns":
                    {
                      'start':1,
                      'start_date': data[j].data[k][0],
                      'end': 1,
                      'end_date': "non trading day"
                    }
                }
              )
            }

          // function edge_returns (backtest_group_period_start){
          //  if(data[j].data[k][0] == backtest_group[i].period_start){
          //     console.log(data[j].ticker, backtest_group[i].ticker, backtest_group[i].period_start, data[j].data[k][1])
          //     var end_values;
          //     if(data[j].data[k+3]){end_values =  [data[j].data[k+3][0], data[j].data[k+3][1]]}
          //     if(data[j].data[k+4]){end_values =  [data[j].data[k+4][0], data[j].data[k+4][1]]}
          //     if(data[j].data[k+5]){end_values =  [data[j].data[k+5][0], data[j].data[k+5][1]]}
          //     if(data[j].data[k+6]){end_values =  [data[j].data[k+6][0], data[j].data[k+6][1]]}
          //     group_returns.push(
          //       {
          //         "ticker":data[j].ticker,
          //         "returns":
          //           {
          //             'start':data[j].data[k][1],//[data[j].data[k][0], data[j].data[k][1]],
          //             'start_date': data[j].data[k][0],
          //             'end': end_values[1],
          //             'end_date': end_values[0]
          //           }
          //       }
          //     )
          //   }
          // }
        };
      };
    };
  };
  //console.log(group_returns);
  return group_returns;
}

function select_stocks(result){
  var top10_stocks = [];
  for (var i = result.length - 1; i >= result.length - 11; i--) {
    top10_stocks.push(result[i]);
  };
  return top10_stocks;
}

function loop_batches (batches){
  var results = [];
  for (var i = 0; i < batches.length; i++) {
    var result = batch_analysis(loop_data(data, batches[i]), batches[i]);
    results.push(result);
    console.log(batches[i]);
  };

  jf.spaces = 1;
  var file = 'data/backtest_results.json';
  jf.writeFile(file, results, function(err) {
    if(err){console.log(err);}
    console.log("Score Results Logged");
  });

  return results;
}


function loop_data (data, periods){
  var collection = [];
  for (var i = 0; i < data.length; i++) {
    collection.push(calculate(data[i],periods));
  };
  return collection;
};

function calculate (body, periods){
  // for each time period specified /////////////////////
  var results = [];
  for (var i = 0; i < periods.length; i++) {

    // individual stock data collection /////////////////
    var data = [];
    var x_value = 0;
    for (var j = 0; j < body.data.length; j++) {
      if (body.data[j][0] >= periods[i][0] && body.data[j][0] <= periods[i][1]){
        data.push([x_value, body.data[j][1]]) //console.log(body.data[j][0],x_value,body.data[j][1])
        x_value++;
      }
    }

    //data analysis ////////////////////////////////////
    var slope = ss.linear_regression().data(data).m();
    var r_squared_func =  ss.linear_regression().data(data).line();
    var r_squared = ss.r_squared(data, r_squared_func);

    results.push({'slope': slope, 'r_squared': r_squared, 'period': periods[i]});
  };
  return {"ticker": body.ticker, 'results': results};
};


function batch_analysis(collection, periods){
  var analysis = [];
  for (var i = 0; i < collection.length; i++) {
    analysis.push({'ticker':collection[i].ticker,'results':collection[i].results[0], 'ranks':[]});
  }

  for (var i = 0; i < periods.length; i++) {
    function compare(a,b) {
      if (a.results[i].slope * a.results[i].r_squared < b.results[i].slope * b.results[i].r_squared ) // maybe remove r_squared or else we're looking for things that too closely follow a line over a year (when it could have been a jump and then steady growth)
        return -1;
      if (a.results[i].slope * a.results[i].r_squared > b.results[i].slope * b.results[i].r_squared )
        return 1;
      return 0;
    }
    var sorted_collection = collection.sort(compare); 
    for (var j = 0; j < sorted_collection.length; j++) {
      for (var k = 0; k < analysis.length; k++) {
        if(sorted_collection[j].ticker == analysis[k].ticker){
          analysis[k].ranks.push(j);
        }
      }
    }
  }
  var analysis_score = [];
  for (var i = 0; i < analysis.length; i++) {
    analysis_score.push({'ticker': analysis[i].ticker, 'score':ss.mean(analysis[i].ranks), 'period_start':analysis[i].results.period[1]})
  };

  function compare_score(a,b) {
    if (a.score < b.score)
      return -1;
    if (a.score > b.score)
      return 1;
    return 0;
  }

  var analysis_score_sorted = analysis_score.sort(compare_score);
  //console.log(analysis);
  return analysis_score_sorted;
}





// var data = require('./data/constant/backtest_data.json');

// //console.log(periods);
// var total_results = [];
// for (var i = 0; i < batches.length; i++) { // batches.length
//   //console.log(batches[i]);
//   var batch_results = [];
//   for (var j = 0; j < batches[i].length; j++) {
//     console.log(batches[i][j][0], batches[i][j][1]);
//     var period_results = [];
//     for (var k = 0; k < data.length; k++) { // data.length
//       //console.log(data[k].ticker);
//       var formattedData = [];
//       var x_value = 0;
//       for (var l = 0; l < data[k].data.length; l++) {
//         //console.log(data[k].data[l]);
//         if (batches[i][j][0] <= data[k].data[l][0] && data[k].data[l][0] <= batches[i][j][1]){
//           //console.log(data[k].data[l][0]);
//           formattedData.push([x_value, data[k].data[l][1]])
//           x_value++;
//         };
//       };
//       //console.log(formattedData);
//       var slope = ss.linear_regression().data(formattedData).m();
//       var r_squared_func =  ss.linear_regression().data(formattedData).line();
//       var r_squared = ss.r_squared(formattedData, r_squared_func);
//       period_results.push({'ticker':data[k].ticker,'slope': slope, 'r_squared': r_squared, 'period': [batches[i][j][0], batches[i][j][1]]});
//       //period_results.push([data[k].ticker, slope, [batches[i][j][0], batches[i][j][1]]])
//     };
//     //console.log(period_results);
//     batch_results.push(period_results);
//   };
//   //console.log(batch_results);
//   total_results.push(batch_results);
// };
// //console.log(total_results);
// // pattern [[[{}<-stock regression]<-periods]<-batches]

// jf.spaces = 1;
// var file = 'data/backtest_results_reg.json';
// jf.writeFile(file, total_results, function(err) {
//   if(err){console.log(err);}
// });

// // console.log(total_results.length); // <-- number of batches, 64
// // console.log(total_results[0].length); // <-- number of periods in each batch, 3
// // console.log(total_results[0][0].length); // <-- number of stocks in each period

// // console.log(total_results[0][0]);


// function score (arrays){
//   var stock_objects = [];
//   for (var i = 0; i < stocks.length; i++) { //stocks.length
//     stock_objects.push({'ticker':stocks[i],'ranks':[]})
//   };
//   //console.log(stock_objects);
//   for (var i = 0; i < arrays.length; i++) {
//     for (var j = 0; j < arrays[i].length; j++) {
//       for (var k = 0; k < stock_objects.length; k++) {
//         if(arrays[i][j].ticker == stock_objects[k].ticker){
//           stock_objects[k].ranks.push(arrays[i][j].rank);
//           stock_objects[k]['start'] = arrays[i][j].start;
//         }
//       };
//     };
//   };
//   //console.log(stock_objects);
//   for (var i = 0; i < stock_objects.length; i++) {
//     stock_objects[i]['score'] = ss.mean(stock_objects[i].ranks);
//   };
//   function compare_score(a,b) {
//     if (a.score < b.score)
//       return -1;
//     if (a.score > b.score)
//       return 1;
//     return 0;
//   }
//   var sorted_stock_objects = stock_objects.sort(compare_score);
//   return sorted_stock_objects;

// }

// function analysis(total_results){
//   var analysis_results = [];
//   for (var i = 0; i < total_results.length; i++) {
//     var batch_ranks = [];
//     for (var j = 0; j < total_results[i].length; j++) {

//       function compare(a,b) {
//         if (a.slope * a.r_squared < b.slope * b.r_squared ) // maybe remove r_squared or else we're looking for things that too closely follow a line over a year (when it could have been a jump and then steady growth)
//           return -1;
//         if (a.slope * a.r_squared > b.slope * b.r_squared )
//           return 1;
//         return 0;
//       }
//       // console.log('///////')
//       // console.log(total_results[i][j]);
//       var sorted = total_results[i][j].sort(compare);
//       // console.log('#############')
//       // console.log(sorted);
//       var ranks = [];
//       for (var k = 0; k < total_results[i][j].length; k++) {
//         ranks.push({'ticker':total_results[i][j][k].ticker,'rank':k,'start':total_results[i][j][k].period[0]});
//       }
//       batch_ranks.push(ranks);
//     }
//     //console.log(batch_ranks);
//     //console.log('////////////')
//     analysis_results.push(score(batch_ranks))
//   }
//   return analysis_results;
// }

// var end = analysis(total_results);
// console.log(end);
// console.log(end.length);


